#!/bin/bash

# Exit on error
set -e

main() {
    get_directory_of_this_app
    source_environment_variables
    source_app_config_if_exists
    source_utility_functions
    parse_arguments "$@"
}

get_directory_of_this_app() {
    APP_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
}

source_environment_variables() {
    source "$APP_DIR/env"
}

source_app_config_if_exists() {
    [ -r "$APP_CONFIG_FILE" ] && source "$APP_CONFIG_FILE" || true
}

source_utility_functions() {
    for file in "$APP_UTILS_DIR"/*; do
        [[ -r "$file" ]] && source "$file"
    done
}

parse_arguments() {
    if [[ $# -eq 0 ]]; then
        show_usage
        exit 0
    else
        case "$1" in
            -h|--help)
                show_usage
                exit 0
                ;;
            -c|--config)
                source "$APP_MODULES_DIR/init.sh" "$@"
                source "$APP_MODULES_DIR/config.sh" "$@"
                ;;
            -l|--log)
                source "$APP_MODULES_DIR/init.sh" "$@"
                source "$APP_MODULES_DIR/log.sh" "$@"
                ;;
            -s|--sync)
                source "$APP_MODULES_DIR/init.sh" "$@"
                source "$APP_MODULES_DIR/sync.sh" "$@"
                ;;
            -t|--test)
                source "$APP_MODULES_DIR/init.sh" "$@"
                source "$APP_MODULES_DIR/test.sh" "$@"
                ;;
            *)
                echo "Error: Invalid option '$1'"
                show_usage
                exit 1
                ;;
        esac
    fi
}

show_usage() {
    echo "Usage: $APP_NAME_LOWER [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -h, --help          Show help"
    echo "  -c, --config        Config Rclone"
    echo "  -l, --log           Perform some log-related operations"
    echo "  -s, --sync          Sync contents"
    echo "  -t, --test          Test connection"
}

# Call main function with arguments
main "$@"
